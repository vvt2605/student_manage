{"ast":null,"code":"var _jsxFileName = \"D:\\\\LearnDeveloper\\\\ReactJS\\\\student-management-infor\\\\src\\\\student.jsx\",\n  _s = $RefreshSig$();\nimport { ProTable } from \"@ant-design/pro-components\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst valueEnum = {\n  0: \"close\",\n  1: \"running\",\n  2: \"online\",\n  3: \"error\"\n};\nconst tableListDataSource = [];\nfor (let i = 0; i < 13; i += 1) {\n  tableListDataSource.push({\n    key: i,\n    name: `TradeCode ${i}`,\n    status: valueEnum[Math.floor(Math.random() * 10) % 4],\n    updatedAt: Date.now() - Math.floor(Math.random() * 1000),\n    createdAt: Date.now() - Math.floor(Math.random() * 2000),\n    money: Math.floor(Math.random() * 2000) * i\n  });\n}\nconst columns = [\n// {\n//     title: \"标题\",\n//     dataIndex: \"name\",\n//     key: \"name\"\n//   },\n{\n  title: \"Name\",\n  dataIndex: \"name\",\n  valueType: \"text\",\n  key: \"name\"\n}, {\n  title: \"Day of birth\",\n  key: \"dob\",\n  dataIndex: \"dob\",\n  valueType: \"date\",\n  hideInSetting: true\n}, {\n  title: \"Địa chỉ\",\n  dataIndex: \"address\",\n  key: \"address\"\n}, {\n  title: \"Hành động\",\n  key: \"option\",\n  width: 120,\n  valueType: \"option\",\n  render: () => [/*#__PURE__*/_jsxDEV(\"a\", {\n    children: \"Edit\"\n  }, \"1\", false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 26\n  }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n    children: \"Delete\"\n  }, \"2\", false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 47\n  }, this)]\n}\n\n//   {\n//     title: \"Name\",\n//     dataIndex: \"name\",\n//     key: \"name\"\n//   },\n//   {\n//     title: \"Name\",\n//     dataIndex: \"name\",\n//     initialValue: \"all\",\n//     filters: true,\n//     onFilter: true,\n//     valueType: \"select\",\n//     valueEnum: {\n//       all: { text: \"全部\", status: \"Default\" },\n//       close: { text: \"关闭\", status: \"Default\" },\n//       running: { text: \"运行中\", status: \"Processing\" },\n//       online: { text: \"已上线\", status: \"Success\" },\n//       error: { text: \"异常\", status: \"Error\" }\n//     }\n//   },\n//   {\n//     title: \"更新时间\",\n//     key: \"since2\",\n//     dataIndex: \"createdAt\",\n//     valueType: \"date\",\n//     hideInSetting: true\n//   },\n\n//   {\n//     title: \"操作\",\n//     key: \"option\",\n//     width: 120,\n//     valueType: \"option\",\n//     render: () => [<a key=\"1\">操作</a>, <a key=\"2\">删除</a>]\n//   }\n];\n\nfunction Student() {\n  _s();\n  const [columnsStateMap, setColumnsStateMap] = useState({\n    name: {\n      show: false,\n      order: 2\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(ProTable, {\n    columns: columns,\n    request: params => Promise.resolve({\n      data: tableListDataSource.filter(item => {\n        if (!(params !== null && params !== void 0 && params.keyWord)) {\n          return true;\n        }\n        if (item.name.includes(params === null || params === void 0 ? void 0 : params.keyWord) || item.status.includes(params === null || params === void 0 ? void 0 : params.keyWord)) {\n          return true;\n        }\n        return false;\n      }),\n      success: true\n    }),\n    pagination: {\n      pageSize: 7,\n      onChange: page => console.log(page)\n    },\n    options: {\n      search: true\n    },\n    rowKey: \"key\",\n    columnsState: {\n      value: columnsStateMap,\n      onChange: setColumnsStateMap\n    },\n    search: false,\n    dateFormatter: \"string\",\n    headerTitle: \"Danh s\\xE1ch h\\u1ECDc sinh\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 9\n  }, this);\n}\n_s(Student, \"9JEB0Rply1X+uTMJqbYDva4RdN0=\");\n_c = Student;\nexport default Student;\nvar _c;\n$RefreshReg$(_c, \"Student\");","map":{"version":3,"names":["ProTable","useState","jsxDEV","_jsxDEV","valueEnum","tableListDataSource","i","push","key","name","status","Math","floor","random","updatedAt","Date","now","createdAt","money","columns","title","dataIndex","valueType","hideInSetting","width","render","children","fileName","_jsxFileName","lineNumber","columnNumber","Student","_s","columnsStateMap","setColumnsStateMap","show","order","request","params","Promise","resolve","data","filter","item","keyWord","includes","success","pagination","pageSize","onChange","page","console","log","options","search","rowKey","columnsState","value","dateFormatter","headerTitle","_c","$RefreshReg$"],"sources":["D:/LearnDeveloper/ReactJS/student-management-infor/src/student.jsx"],"sourcesContent":["import { ProTable } from \"@ant-design/pro-components\"\r\nimport { useState } from \"react\"\r\n\r\nconst valueEnum = {\r\n  0: \"close\",\r\n  1: \"running\",\r\n  2: \"online\",\r\n  3: \"error\"\r\n}\r\n\r\nconst tableListDataSource = []\r\n\r\nfor (let i = 0; i < 13; i += 1) {\r\n  tableListDataSource.push({\r\n    key: i,\r\n    name: `TradeCode ${i}`,\r\n    status: valueEnum[Math.floor(Math.random() * 10) % 4],\r\n    updatedAt: Date.now() - Math.floor(Math.random() * 1000),\r\n    createdAt: Date.now() - Math.floor(Math.random() * 2000),\r\n    money: Math.floor(Math.random() * 2000) * i\r\n  })\r\n}\r\n\r\nconst columns = [\r\n    // {\r\n    //     title: \"标题\",\r\n    //     dataIndex: \"name\",\r\n    //     key: \"name\"\r\n    //   },\r\n        {\r\n          title: \"Name\",\r\n          dataIndex: \"name\",\r\n          valueType: \"text\",\r\n          key: \"name\"\r\n        },\r\n        {\r\n          title: \"Day of birth\",\r\n          key: \"dob\",\r\n          dataIndex: \"dob\",\r\n          valueType: \"date\",\r\n          hideInSetting: true\r\n        },\r\n        {\r\n          title: \"Địa chỉ\",\r\n          dataIndex: \"address\",\r\n          key: \"address\"\r\n        },\r\n        {\r\n          title: \"Hành động\",\r\n          key: \"option\",\r\n          width: 120,\r\n          valueType: \"option\",\r\n          render: () => [<a key=\"1\">Edit</a>, <a key=\"2\">Delete</a>]\r\n        },\r\n      \r\n      \r\n \r\n//   {\r\n//     title: \"Name\",\r\n//     dataIndex: \"name\",\r\n//     key: \"name\"\r\n//   },\r\n//   {\r\n//     title: \"Name\",\r\n//     dataIndex: \"name\",\r\n//     initialValue: \"all\",\r\n//     filters: true,\r\n//     onFilter: true,\r\n//     valueType: \"select\",\r\n//     valueEnum: {\r\n//       all: { text: \"全部\", status: \"Default\" },\r\n//       close: { text: \"关闭\", status: \"Default\" },\r\n//       running: { text: \"运行中\", status: \"Processing\" },\r\n//       online: { text: \"已上线\", status: \"Success\" },\r\n//       error: { text: \"异常\", status: \"Error\" }\r\n//     }\r\n//   },\r\n//   {\r\n//     title: \"更新时间\",\r\n//     key: \"since2\",\r\n//     dataIndex: \"createdAt\",\r\n//     valueType: \"date\",\r\n//     hideInSetting: true\r\n//   },\r\n\r\n//   {\r\n//     title: \"操作\",\r\n//     key: \"option\",\r\n//     width: 120,\r\n//     valueType: \"option\",\r\n//     render: () => [<a key=\"1\">操作</a>, <a key=\"2\">删除</a>]\r\n//   }\r\n]\r\n\r\nfunction Student() {\r\n    const [columnsStateMap, setColumnsStateMap] = useState({\r\n        name: {\r\n          show: false,\r\n          order: 2\r\n        }\r\n      })\r\n      return (\r\n        <ProTable\r\n          columns={columns}\r\n          request={params =>\r\n            Promise.resolve({\r\n              data: tableListDataSource.filter(item => {\r\n                if (!params?.keyWord) {\r\n                  return true\r\n                }\r\n                if (\r\n                  item.name.includes(params?.keyWord) ||\r\n                  item.status.includes(params?.keyWord)\r\n                ) {\r\n                  return true\r\n                }\r\n                return false\r\n              }),\r\n              success: true\r\n            })\r\n          }\r\n          pagination={{\r\n            pageSize: 7,\r\n            onChange: page => console.log(page)\r\n          }}\r\n          options={{\r\n            search: true\r\n          }}\r\n          rowKey=\"key\"\r\n          columnsState={{\r\n            value: columnsStateMap,\r\n            onChange: setColumnsStateMap\r\n          }}\r\n          search={false}\r\n          dateFormatter=\"string\"\r\n          headerTitle=\"Danh sách học sinh\"\r\n        />\r\n      )\r\n   \r\n}\r\n\r\nexport default Student"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}