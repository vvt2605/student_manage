{"ast":null,"code":"import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport { compareVersions } from '@ant-design/pro-utils';\nimport { version } from 'antd';\nimport pathToRegexp from 'path-to-regexp';\nimport { urlToList } from \"./pathTools\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport var getVersion = function getVersion() {\n  var _process, _process$env;\n  if (typeof process === 'undefined') return version;\n  return ((_process = process) === null || _process === void 0 ? void 0 : (_process$env = _process.env) === null || _process$env === void 0 ? void 0 : _process$env.ANTD_VERSION) || version;\n};\n// 渲染Breadcrumb 子节点\n// Render the Breadcrumb child node\nvar defaultItemRender = function defaultItemRender(route, _, routes) {\n  var _ref = route,\n    breadcrumbName = _ref.breadcrumbName,\n    title = _ref.title,\n    path = _ref.path;\n  var last = routes.indexOf(route) === routes.length - 1;\n  return last ? /*#__PURE__*/_jsx(\"span\", {\n    children: title || breadcrumbName\n  }) : /*#__PURE__*/_jsx(\"span\", {\n    onClick: path ? function () {\n      location.href = path;\n    } : undefined,\n    children: title || breadcrumbName\n  });\n};\nvar renderItemLocal = function renderItemLocal(item, props) {\n  var formatMessage = props.formatMessage,\n    menu = props.menu;\n  if (item.locale && formatMessage && (menu === null || menu === void 0 ? void 0 : menu.locale) !== false) {\n    return formatMessage({\n      id: item.locale,\n      defaultMessage: item.name\n    });\n  }\n  return item.name;\n};\nexport var getBreadcrumb = function getBreadcrumb(breadcrumbMap, url) {\n  var breadcrumbItem = breadcrumbMap.get(url);\n  if (!breadcrumbItem) {\n    // Find the first matching path in the order defined by route config\n    // 按照 route config 定义的顺序找到第一个匹配的路径\n    var keys = Array.from(breadcrumbMap.keys()) || [];\n    var targetPath = keys.find(function (path) {\n      return (\n        // remove ? ,不然会重复\n        pathToRegexp(path.replace('?', '')).test(url)\n      );\n    });\n    if (targetPath) breadcrumbItem = breadcrumbMap.get(targetPath);\n  }\n  return breadcrumbItem || {\n    path: ''\n  };\n};\nexport var getBreadcrumbFromProps = function getBreadcrumbFromProps(props) {\n  var location = props.location,\n    breadcrumbMap = props.breadcrumbMap;\n  return {\n    location: location,\n    breadcrumbMap: breadcrumbMap\n  };\n};\nvar conversionFromLocation = function conversionFromLocation(routerLocation, breadcrumbMap, props) {\n  // Convertor the url to an array\n  var pathSnippets = urlToList(routerLocation === null || routerLocation === void 0 ? void 0 : routerLocation.pathname);\n  // Loop data mosaic routing\n  var extraBreadcrumbItems = pathSnippets.map(function (url) {\n    var currentBreadcrumb = getBreadcrumb(breadcrumbMap, url);\n    var name = renderItemLocal(currentBreadcrumb, props);\n    var hideInBreadcrumb = currentBreadcrumb.hideInBreadcrumb;\n    return name && !hideInBreadcrumb ? {\n      linkPath: url,\n      breadcrumbName: name,\n      title: name,\n      component: currentBreadcrumb.component\n    } : {\n      linkPath: '',\n      breadcrumbName: '',\n      title: ''\n    };\n  }).filter(function (item) {\n    return item && item.linkPath;\n  });\n  return extraBreadcrumbItems;\n};\n/** 将参数转化为面包屑 Convert parameters into breadcrumbs */\nexport var genBreadcrumbProps = function genBreadcrumbProps(props) {\n  var _getBreadcrumbFromPro = getBreadcrumbFromProps(props),\n    location = _getBreadcrumbFromPro.location,\n    breadcrumbMap = _getBreadcrumbFromPro.breadcrumbMap;\n\n  // 根据 location 生成 面包屑\n  // Generate breadcrumbs based on location\n  if (location && location.pathname && breadcrumbMap) {\n    return conversionFromLocation(location, breadcrumbMap, props);\n  }\n  return [];\n};\n\n// 声明一个导出函数，接收两个参数：BreadcrumbProps和ProLayoutProps，返回一个BreadcrumbListReturn类型的对象\nexport var getBreadcrumbProps = function getBreadcrumbProps(props, layoutPros // ProLayoutProps类型的layoutPros\n) {\n  // 解构赋值获取props中的breadcrumbRender和props中的itemRender，如果props中没有itemRender则使用默认的defaultItemRender函数\n  var breadcrumbRender = props.breadcrumbRender,\n    propsItemRender = props.itemRender;\n  // 解构赋值获取layoutPros.breadcrumbProps.minLenght的值，如果没有设置，则默认为2\n  var _ref2 = layoutPros.breadcrumbProps || {},\n    _ref2$minLength = _ref2.minLength,\n    minLength = _ref2$minLength === void 0 ? 2 : _ref2$minLength;\n  // 生成面包屑的路由数组，该数组中包含菜单项和面包屑项\n  var routesArray = genBreadcrumbProps(props);\n  // 如果props中有itemRender，则使用props中的itemRender，否则使用默认函数defaultItemRender\n  var itemRender = function itemRender(item) {\n    var renderFunction = propsItemRender || defaultItemRender;\n    for (var _len = arguments.length, rest = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      rest[_key - 1] = arguments[_key];\n    }\n    return renderFunction === null || renderFunction === void 0 ? void 0 : renderFunction.apply(void 0, [_objectSpread(_objectSpread({}, item), {}, {\n      // 如果item.linkPath存在，则使用item.linkPath，否则使用item.path\n      // @ts-ignore\n      path: item.linkPath || item.path\n    })].concat(rest));\n  };\n  var items = routesArray;\n  // 如果面包屑渲染函数breadcrumbRender存在，则使用其渲染数组items\n  if (breadcrumbRender) {\n    items = breadcrumbRender(items || []) || undefined;\n  }\n  // 如果items（渲染后的数组）的长度小于minLength或者breadcrumbRender为false，则items为undefined\n  if (items && items.length < minLength || breadcrumbRender === false) {\n    items = undefined;\n  }\n  // 如果当前 ant design 包的版本大于等于5.3.0，则返回一个对象{items,itemRender},否则返回一个对象{routes:item,itemRender}\n  return compareVersions(getVersion(), '5.3.0') > -1 ? {\n    items: items,\n    itemRender: itemRender\n  } : {\n    routes: items,\n    itemRender: itemRender\n  };\n};","map":{"version":3,"names":["_objectSpread","compareVersions","version","pathToRegexp","urlToList","jsx","_jsx","getVersion","_process","_process$env","process","env","ANTD_VERSION","defaultItemRender","route","_","routes","_ref","breadcrumbName","title","path","last","indexOf","length","children","onClick","location","href","undefined","renderItemLocal","item","props","formatMessage","menu","locale","id","defaultMessage","name","getBreadcrumb","breadcrumbMap","url","breadcrumbItem","get","keys","Array","from","targetPath","find","replace","test","getBreadcrumbFromProps","conversionFromLocation","routerLocation","pathSnippets","pathname","extraBreadcrumbItems","map","currentBreadcrumb","hideInBreadcrumb","linkPath","component","filter","genBreadcrumbProps","_getBreadcrumbFromPro","getBreadcrumbProps","layoutPros","breadcrumbRender","propsItemRender","itemRender","_ref2","breadcrumbProps","_ref2$minLength","minLength","routesArray","renderFunction","_len","arguments","rest","_key","apply","concat","items"],"sources":["D:/LearnDeveloper/ReactJS/student-management-infor/node_modules/@ant-design/pro-layout/es/utils/getBreadcrumbProps.js"],"sourcesContent":["import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport { compareVersions } from '@ant-design/pro-utils';\nimport { version } from 'antd';\nimport pathToRegexp from 'path-to-regexp';\nimport { urlToList } from \"./pathTools\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport var getVersion = function getVersion() {\n  var _process, _process$env;\n  if (typeof process === 'undefined') return version;\n  return ((_process = process) === null || _process === void 0 ? void 0 : (_process$env = _process.env) === null || _process$env === void 0 ? void 0 : _process$env.ANTD_VERSION) || version;\n};\n// 渲染Breadcrumb 子节点\n// Render the Breadcrumb child node\nvar defaultItemRender = function defaultItemRender(route, _, routes) {\n  var _ref = route,\n    breadcrumbName = _ref.breadcrumbName,\n    title = _ref.title,\n    path = _ref.path;\n  var last = routes.indexOf(route) === routes.length - 1;\n  return last ? /*#__PURE__*/_jsx(\"span\", {\n    children: title || breadcrumbName\n  }) : /*#__PURE__*/_jsx(\"span\", {\n    onClick: path ? function () {\n      location.href = path;\n    } : undefined,\n    children: title || breadcrumbName\n  });\n};\nvar renderItemLocal = function renderItemLocal(item, props) {\n  var formatMessage = props.formatMessage,\n    menu = props.menu;\n  if (item.locale && formatMessage && (menu === null || menu === void 0 ? void 0 : menu.locale) !== false) {\n    return formatMessage({\n      id: item.locale,\n      defaultMessage: item.name\n    });\n  }\n  return item.name;\n};\nexport var getBreadcrumb = function getBreadcrumb(breadcrumbMap, url) {\n  var breadcrumbItem = breadcrumbMap.get(url);\n  if (!breadcrumbItem) {\n    // Find the first matching path in the order defined by route config\n    // 按照 route config 定义的顺序找到第一个匹配的路径\n    var keys = Array.from(breadcrumbMap.keys()) || [];\n    var targetPath = keys.find(function (path) {\n      return (\n        // remove ? ,不然会重复\n        pathToRegexp(path.replace('?', '')).test(url)\n      );\n    });\n    if (targetPath) breadcrumbItem = breadcrumbMap.get(targetPath);\n  }\n  return breadcrumbItem || {\n    path: ''\n  };\n};\nexport var getBreadcrumbFromProps = function getBreadcrumbFromProps(props) {\n  var location = props.location,\n    breadcrumbMap = props.breadcrumbMap;\n  return {\n    location: location,\n    breadcrumbMap: breadcrumbMap\n  };\n};\nvar conversionFromLocation = function conversionFromLocation(routerLocation, breadcrumbMap, props) {\n  // Convertor the url to an array\n  var pathSnippets = urlToList(routerLocation === null || routerLocation === void 0 ? void 0 : routerLocation.pathname);\n  // Loop data mosaic routing\n  var extraBreadcrumbItems = pathSnippets.map(function (url) {\n    var currentBreadcrumb = getBreadcrumb(breadcrumbMap, url);\n    var name = renderItemLocal(currentBreadcrumb, props);\n    var hideInBreadcrumb = currentBreadcrumb.hideInBreadcrumb;\n    return name && !hideInBreadcrumb ? {\n      linkPath: url,\n      breadcrumbName: name,\n      title: name,\n      component: currentBreadcrumb.component\n    } : {\n      linkPath: '',\n      breadcrumbName: '',\n      title: ''\n    };\n  }).filter(function (item) {\n    return item && item.linkPath;\n  });\n  return extraBreadcrumbItems;\n};\n/** 将参数转化为面包屑 Convert parameters into breadcrumbs */\nexport var genBreadcrumbProps = function genBreadcrumbProps(props) {\n  var _getBreadcrumbFromPro = getBreadcrumbFromProps(props),\n    location = _getBreadcrumbFromPro.location,\n    breadcrumbMap = _getBreadcrumbFromPro.breadcrumbMap;\n\n  // 根据 location 生成 面包屑\n  // Generate breadcrumbs based on location\n  if (location && location.pathname && breadcrumbMap) {\n    return conversionFromLocation(location, breadcrumbMap, props);\n  }\n  return [];\n};\n\n// 声明一个导出函数，接收两个参数：BreadcrumbProps和ProLayoutProps，返回一个BreadcrumbListReturn类型的对象\nexport var getBreadcrumbProps = function getBreadcrumbProps(props, layoutPros // ProLayoutProps类型的layoutPros\n) {\n  // 解构赋值获取props中的breadcrumbRender和props中的itemRender，如果props中没有itemRender则使用默认的defaultItemRender函数\n  var breadcrumbRender = props.breadcrumbRender,\n    propsItemRender = props.itemRender;\n  // 解构赋值获取layoutPros.breadcrumbProps.minLenght的值，如果没有设置，则默认为2\n  var _ref2 = layoutPros.breadcrumbProps || {},\n    _ref2$minLength = _ref2.minLength,\n    minLength = _ref2$minLength === void 0 ? 2 : _ref2$minLength;\n  // 生成面包屑的路由数组，该数组中包含菜单项和面包屑项\n  var routesArray = genBreadcrumbProps(props);\n  // 如果props中有itemRender，则使用props中的itemRender，否则使用默认函数defaultItemRender\n  var itemRender = function itemRender(item) {\n    var renderFunction = propsItemRender || defaultItemRender;\n    for (var _len = arguments.length, rest = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      rest[_key - 1] = arguments[_key];\n    }\n    return renderFunction === null || renderFunction === void 0 ? void 0 : renderFunction.apply(void 0, [_objectSpread(_objectSpread({}, item), {}, {\n      // 如果item.linkPath存在，则使用item.linkPath，否则使用item.path\n      // @ts-ignore\n      path: item.linkPath || item.path\n    })].concat(rest));\n  };\n  var items = routesArray;\n  // 如果面包屑渲染函数breadcrumbRender存在，则使用其渲染数组items\n  if (breadcrumbRender) {\n    items = breadcrumbRender(items || []) || undefined;\n  }\n  // 如果items（渲染后的数组）的长度小于minLength或者breadcrumbRender为false，则items为undefined\n  if (items && items.length < minLength || breadcrumbRender === false) {\n    items = undefined;\n  }\n  // 如果当前 ant design 包的版本大于等于5.3.0，则返回一个对象{items,itemRender},否则返回一个对象{routes:item,itemRender}\n  return compareVersions(getVersion(), '5.3.0') > -1 ? {\n    items: items,\n    itemRender: itemRender\n  } : {\n    routes: items,\n    itemRender: itemRender\n  };\n};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}