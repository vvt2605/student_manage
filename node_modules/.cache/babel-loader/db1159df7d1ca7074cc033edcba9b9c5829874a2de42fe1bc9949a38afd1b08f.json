{"ast":null,"code":"import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _excluded = [\"name\", \"children\", \"ignoreFormListField\"];\nimport { isDeepEqualReact, merge, ProFormContext } from '@ant-design/pro-utils';\nimport { Form } from 'antd';\nimport get from \"rc-util/es/utils/get\";\nimport set from \"rc-util/es/utils/set\";\nimport { useContext, useMemo } from 'react';\nimport { FormListContext } from \"../List\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar ProFormDependency = function ProFormDependency(_ref) {\n  var names = _ref.name,\n    _children = _ref.children,\n    ignoreFormListField = _ref.ignoreFormListField,\n    rest = _objectWithoutProperties(_ref, _excluded);\n  var context = useContext(ProFormContext);\n  // ProFromList 的 field，里面有name和key\n  var formListField = useContext(FormListContext);\n\n  // flatten each name into an (string | number)[]\n  var flattenNames = useMemo(function () {\n    return names.map(function (itemName) {\n      var _formListField$listNa;\n      var name = [itemName];\n\n      // ignoreFormListField为 true 或 formListField.name === undefined 时\n      // 应从全局取值，要将 names 中各项的路径前缀(formListField.listName)忽略\n      if (!ignoreFormListField && formListField.name !== undefined && (_formListField$listNa = formListField.listName) !== null && _formListField$listNa !== void 0 && _formListField$listNa.length) {\n        name.unshift(formListField.listName);\n      }\n      return name.flat(1);\n    });\n  }, [formListField.listName, formListField.name, ignoreFormListField, names]);\n  return /*#__PURE__*/_jsx(Form.Item, _objectSpread(_objectSpread({}, rest), {}, {\n    noStyle: true,\n    shouldUpdate: function shouldUpdate(prevValues, nextValues, info) {\n      if (typeof rest.shouldUpdate === 'boolean') {\n        return rest.shouldUpdate;\n      } else if (typeof rest.shouldUpdate === 'function') {\n        var _rest$shouldUpdate;\n        return (_rest$shouldUpdate = rest.shouldUpdate) === null || _rest$shouldUpdate === void 0 ? void 0 : _rest$shouldUpdate.call(rest, prevValues, nextValues, info);\n      }\n      return flattenNames.some(function (name) {\n        return !isDeepEqualReact(get(prevValues, name), get(nextValues, name));\n      });\n    },\n    children: function children(form) {\n      var values = {};\n      for (var i = 0; i < names.length; i++) {\n        var _context$getFieldForm;\n        var pathToGet = flattenNames[i],\n          pathToSet = names[i];\n        var finalName = [pathToSet].flat(1);\n        var value = (_context$getFieldForm = context.getFieldFormatValueObject) === null || _context$getFieldForm === void 0 ? void 0 : _context$getFieldForm.call(context, pathToGet);\n        if (value && Object.keys(value).length) {\n          // transform 会生成多余的value，这里需要注入一下\n          values = merge({}, values, value);\n          if (get(value, pathToGet)) {\n            values = set(values, finalName, get(value, pathToGet), false);\n          }\n        } else {\n          var _form$getFieldValue;\n          value = (_form$getFieldValue = form.getFieldValue) === null || _form$getFieldValue === void 0 ? void 0 : _form$getFieldValue.call(form, pathToGet);\n          if (typeof value !== 'undefined') {\n            values = set(values, finalName, value, false);\n          }\n        }\n      }\n      return _children === null || _children === void 0 ? void 0 : _children(values, _objectSpread(_objectSpread({}, form), context));\n    }\n  }));\n};\nexport default ProFormDependency;","map":{"version":3,"names":["_objectSpread","_objectWithoutProperties","_excluded","isDeepEqualReact","merge","ProFormContext","Form","get","set","useContext","useMemo","FormListContext","jsx","_jsx","ProFormDependency","_ref","names","name","_children","children","ignoreFormListField","rest","context","formListField","flattenNames","map","itemName","_formListField$listNa","undefined","listName","length","unshift","flat","Item","noStyle","shouldUpdate","prevValues","nextValues","info","_rest$shouldUpdate","call","some","form","values","i","_context$getFieldForm","pathToGet","pathToSet","finalName","value","getFieldFormatValueObject","Object","keys","_form$getFieldValue","getFieldValue"],"sources":["D:/LearnDeveloper/ReactJS/student-management-infor/node_modules/@ant-design/pro-form/es/components/Dependency/index.js"],"sourcesContent":["import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _excluded = [\"name\", \"children\", \"ignoreFormListField\"];\nimport { isDeepEqualReact, merge, ProFormContext } from '@ant-design/pro-utils';\nimport { Form } from 'antd';\nimport get from \"rc-util/es/utils/get\";\nimport set from \"rc-util/es/utils/set\";\nimport { useContext, useMemo } from 'react';\nimport { FormListContext } from \"../List\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar ProFormDependency = function ProFormDependency(_ref) {\n  var names = _ref.name,\n    _children = _ref.children,\n    ignoreFormListField = _ref.ignoreFormListField,\n    rest = _objectWithoutProperties(_ref, _excluded);\n  var context = useContext(ProFormContext);\n  // ProFromList 的 field，里面有name和key\n  var formListField = useContext(FormListContext);\n\n  // flatten each name into an (string | number)[]\n  var flattenNames = useMemo(function () {\n    return names.map(function (itemName) {\n      var _formListField$listNa;\n      var name = [itemName];\n\n      // ignoreFormListField为 true 或 formListField.name === undefined 时\n      // 应从全局取值，要将 names 中各项的路径前缀(formListField.listName)忽略\n      if (!ignoreFormListField && formListField.name !== undefined && (_formListField$listNa = formListField.listName) !== null && _formListField$listNa !== void 0 && _formListField$listNa.length) {\n        name.unshift(formListField.listName);\n      }\n      return name.flat(1);\n    });\n  }, [formListField.listName, formListField.name, ignoreFormListField, names]);\n  return /*#__PURE__*/_jsx(Form.Item, _objectSpread(_objectSpread({}, rest), {}, {\n    noStyle: true,\n    shouldUpdate: function shouldUpdate(prevValues, nextValues, info) {\n      if (typeof rest.shouldUpdate === 'boolean') {\n        return rest.shouldUpdate;\n      } else if (typeof rest.shouldUpdate === 'function') {\n        var _rest$shouldUpdate;\n        return (_rest$shouldUpdate = rest.shouldUpdate) === null || _rest$shouldUpdate === void 0 ? void 0 : _rest$shouldUpdate.call(rest, prevValues, nextValues, info);\n      }\n      return flattenNames.some(function (name) {\n        return !isDeepEqualReact(get(prevValues, name), get(nextValues, name));\n      });\n    },\n    children: function children(form) {\n      var values = {};\n      for (var i = 0; i < names.length; i++) {\n        var _context$getFieldForm;\n        var pathToGet = flattenNames[i],\n          pathToSet = names[i];\n        var finalName = [pathToSet].flat(1);\n        var value = (_context$getFieldForm = context.getFieldFormatValueObject) === null || _context$getFieldForm === void 0 ? void 0 : _context$getFieldForm.call(context, pathToGet);\n        if (value && Object.keys(value).length) {\n          // transform 会生成多余的value，这里需要注入一下\n          values = merge({}, values, value);\n          if (get(value, pathToGet)) {\n            values = set(values, finalName, get(value, pathToGet), false);\n          }\n        } else {\n          var _form$getFieldValue;\n          value = (_form$getFieldValue = form.getFieldValue) === null || _form$getFieldValue === void 0 ? void 0 : _form$getFieldValue.call(form, pathToGet);\n          if (typeof value !== 'undefined') {\n            values = set(values, finalName, value, false);\n          }\n        }\n      }\n      return _children === null || _children === void 0 ? void 0 : _children(values, _objectSpread(_objectSpread({}, form), context));\n    }\n  }));\n};\nexport default ProFormDependency;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}