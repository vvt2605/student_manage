{"ast":null,"code":"function _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n  return arr2;\n}\nfunction _iterableToArrayLimit(arr, i) {\n  var _i = arr && (typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]);\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _s, _e;\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n  return _arr;\n}\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\nimport { useState, useEffect } from 'react';\nimport useMediaQuery from './useMediaQuery';\nexport var MediaQueryEnum = {\n  xs: {\n    maxWidth: 575,\n    matchMedia: '(max-width: 575px)'\n  },\n  sm: {\n    minWidth: 576,\n    maxWidth: 767,\n    matchMedia: '(min-width: 576px) and (max-width: 767px)'\n  },\n  md: {\n    minWidth: 768,\n    maxWidth: 991,\n    matchMedia: '(min-width: 768px) and (max-width: 991px)'\n  },\n  lg: {\n    minWidth: 992,\n    maxWidth: 1199,\n    matchMedia: '(min-width: 992px) and (max-width: 1199px)'\n  },\n  xl: {\n    minWidth: 1200,\n    maxWidth: 1599,\n    matchMedia: '(min-width: 1200px) and (max-width: 1599px)'\n  },\n  xxl: {\n    minWidth: 1600,\n    matchMedia: '(min-width: 1600px)'\n  }\n};\n/**\n * loop query screen className\n * Array.find will throw a error\n * `Rendered more hooks than during the previous render.`\n * So should use Array.forEach\n */\n\nexport var getScreenClassName = function getScreenClassName() {\n  var className = 'md'; // support ssr\n\n  if (typeof window === 'undefined') {\n    return className;\n  }\n  var mediaQueryKey = Object.keys(MediaQueryEnum).find(function (key) {\n    var matchMedia = MediaQueryEnum[key].matchMedia;\n    if (window.matchMedia(matchMedia).matches) {\n      return true;\n    }\n    return false;\n  });\n  className = mediaQueryKey;\n  return className;\n};\nvar useMedia = function useMedia() {\n  var isMd = useMediaQuery(MediaQueryEnum.md.matchMedia);\n  var isLg = useMediaQuery(MediaQueryEnum.lg.matchMedia);\n  var isXxl = useMediaQuery(MediaQueryEnum.xxl.matchMedia);\n  var isXl = useMediaQuery(MediaQueryEnum.xl.matchMedia);\n  var isSm = useMediaQuery(MediaQueryEnum.sm.matchMedia);\n  var isXs = useMediaQuery(MediaQueryEnum.xs.matchMedia);\n  var _useState = useState(getScreenClassName()),\n    _useState2 = _slicedToArray(_useState, 2),\n    colSpan = _useState2[0],\n    setColSpan = _useState2[1];\n  useEffect(function () {\n    if (process.env.NODE_ENV === 'TEST') {\n      setColSpan(process.env.USE_MEDIA || 'xs');\n      return;\n    }\n    if (isXxl) {\n      setColSpan('xxl');\n      return;\n    }\n    if (isXl) {\n      setColSpan('xl');\n      return;\n    }\n    if (isLg) {\n      setColSpan('lg');\n      return;\n    }\n    if (isMd) {\n      setColSpan('md');\n      return;\n    }\n    if (isSm) {\n      setColSpan('sm');\n      return;\n    }\n    if (isXs) {\n      setColSpan('xs');\n      return;\n    }\n    setColSpan('md');\n  }, [isMd, isLg, isXxl, isXl, isSm, isXs]);\n  return colSpan;\n};\nexport default useMedia;","map":{"version":3,"names":["_slicedToArray","arr","i","_arrayWithHoles","_iterableToArrayLimit","_unsupportedIterableToArray","_nonIterableRest","TypeError","o","minLen","_arrayLikeToArray","n","Object","prototype","toString","call","slice","constructor","name","Array","from","test","len","length","arr2","_i","Symbol","iterator","_arr","_n","_d","_s","_e","next","done","push","value","err","isArray","useState","useEffect","useMediaQuery","MediaQueryEnum","xs","maxWidth","matchMedia","sm","minWidth","md","lg","xl","xxl","getScreenClassName","className","window","mediaQueryKey","keys","find","key","matches","useMedia","isMd","isLg","isXxl","isXl","isSm","isXs","_useState","_useState2","colSpan","setColSpan","process","env","NODE_ENV","USE_MEDIA"],"sources":["D:/LearnDeveloper/ReactJS/student-management-infor/node_modules/use-media-antd-query/es/index.js"],"sourcesContent":["function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { var _i = arr && (typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]); if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nimport { useState, useEffect } from 'react';\nimport useMediaQuery from './useMediaQuery';\nexport var MediaQueryEnum = {\n  xs: {\n    maxWidth: 575,\n    matchMedia: '(max-width: 575px)'\n  },\n  sm: {\n    minWidth: 576,\n    maxWidth: 767,\n    matchMedia: '(min-width: 576px) and (max-width: 767px)'\n  },\n  md: {\n    minWidth: 768,\n    maxWidth: 991,\n    matchMedia: '(min-width: 768px) and (max-width: 991px)'\n  },\n  lg: {\n    minWidth: 992,\n    maxWidth: 1199,\n    matchMedia: '(min-width: 992px) and (max-width: 1199px)'\n  },\n  xl: {\n    minWidth: 1200,\n    maxWidth: 1599,\n    matchMedia: '(min-width: 1200px) and (max-width: 1599px)'\n  },\n  xxl: {\n    minWidth: 1600,\n    matchMedia: '(min-width: 1600px)'\n  }\n};\n/**\n * loop query screen className\n * Array.find will throw a error\n * `Rendered more hooks than during the previous render.`\n * So should use Array.forEach\n */\n\nexport var getScreenClassName = function getScreenClassName() {\n  var className = 'md'; // support ssr\n\n  if (typeof window === 'undefined') {\n    return className;\n  }\n\n  var mediaQueryKey = Object.keys(MediaQueryEnum).find(function (key) {\n    var matchMedia = MediaQueryEnum[key].matchMedia;\n\n    if (window.matchMedia(matchMedia).matches) {\n      return true;\n    }\n\n    return false;\n  });\n  className = mediaQueryKey;\n  return className;\n};\n\nvar useMedia = function useMedia() {\n  var isMd = useMediaQuery(MediaQueryEnum.md.matchMedia);\n  var isLg = useMediaQuery(MediaQueryEnum.lg.matchMedia);\n  var isXxl = useMediaQuery(MediaQueryEnum.xxl.matchMedia);\n  var isXl = useMediaQuery(MediaQueryEnum.xl.matchMedia);\n  var isSm = useMediaQuery(MediaQueryEnum.sm.matchMedia);\n  var isXs = useMediaQuery(MediaQueryEnum.xs.matchMedia);\n\n  var _useState = useState(getScreenClassName()),\n      _useState2 = _slicedToArray(_useState, 2),\n      colSpan = _useState2[0],\n      setColSpan = _useState2[1];\n\n  useEffect(function () {\n    if (process.env.NODE_ENV === 'TEST') {\n      setColSpan(process.env.USE_MEDIA || 'xs');\n      return;\n    }\n\n    if (isXxl) {\n      setColSpan('xxl');\n      return;\n    }\n\n    if (isXl) {\n      setColSpan('xl');\n      return;\n    }\n\n    if (isLg) {\n      setColSpan('lg');\n      return;\n    }\n\n    if (isMd) {\n      setColSpan('md');\n      return;\n    }\n\n    if (isSm) {\n      setColSpan('sm');\n      return;\n    }\n\n    if (isXs) {\n      setColSpan('xs');\n      return;\n    }\n\n    setColSpan('md');\n  }, [isMd, isLg, isXxl, isXl, isSm, isXs]);\n  return colSpan;\n};\n\nexport default useMedia;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}