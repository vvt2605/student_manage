{"ast":null,"code":"var _jsxFileName = \"D:\\\\LearnDeveloper\\\\ReactJS\\\\student-management-infor\\\\src\\\\student.jsx\",\n  _s = $RefreshSig$();\nimport { ProTable } from \"@ant-design/pro-components\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst valueEnum = {\n  0: \"close\",\n  1: \"running\",\n  2: \"online\",\n  3: \"error\"\n};\nconst tableListDataSource = [{\n  name: \"Lê Bùi Văn\",\n  dob: \"22/06/2002\",\n  gender: \"Nam\",\n  class: \"A\",\n  phone: \"0123456789\",\n  hometown: \"Hà Nội\",\n  subject: [\"Toán\", \"Vật lý\", \"Tiếng Anh\"]\n}, {\n  name: \"Nguyễn Thị Kim Ngân\",\n  dob: \"09/03/2003\",\n  gender: \"Nữ\",\n  class: \"B\",\n  phone: \"0112345678\",\n  hometown: \"Bắc Ninh\",\n  subject: [\"Văn\", \"Hóa học\", \"Lịch sử\"]\n}, {\n  name: \"Trần Văn Minh\",\n  dob: \"05/11/2002\",\n  gender: \"Nam\",\n  class: \"C\",\n  phone: \"0109876543\",\n  hometown: \"Thái Bình\",\n  subject: [\"Toán\", \"Vật lý\", \"Sinh học\"]\n}, {\n  name: \"Phạm Thị Thu\",\n  dob: \"17/02/2002\",\n  gender: \"Nữ\",\n  class: \"A\",\n  phone: \"0198765432\",\n  hometown: \"Hải Phòng\",\n  subject: [\"Văn\", \"Địa lí\", \"Tiếng Anh\"]\n}, {\n  name: \"Nguyễn Văn Hoàn\",\n  dob: \"12/09/2003\",\n  gender: \"Nam\",\n  class: \"B\",\n  phone: \"0187654321\",\n  hometown: \"Hưng Yên\",\n  subject: [\"Toán\", \"Vật lý\", \"Hóa học\"]\n}, {\n  name: \"Bùi Ngọc Ánh\",\n  dob: \"08/06/2002\",\n  gender: \"Nữ\",\n  class: \"C\",\n  phone: \"0176543210\",\n  hometown: \"Nghệ An\",\n  subject: [\"Toán\", \"Hóa học\", \"Sinh học\"]\n}];\n\n// for (let i = 0; i < 13; i += 1) {\n//     tableListDataSource.push({\n//         key: i,\n//         name: `TradeCode ${i}`,\n//         status: valueEnum[Math.floor(Math.random() * 10) % 4],\n//         updatedAt: Date.now() - Math.floor(Math.random() * 1000),\n//         createdAt: Date.now() - Math.floor(Math.random() * 2000),\n//         money: Math.floor(Math.random() * 2000) * i\n//     })\n// }\n\nconst columns = [\n// {\n//     title: \"标题\",\n//     dataIndex: \"name\",\n//     key: \"name\"\n//   },\n{\n  title: \"Name\",\n  key: \"name1\",\n  dataIndex: \"name\",\n  valueType: \"text\"\n}, {\n  title: \"Day of birth\",\n  key: \"dob\",\n  dataIndex: \"dob\",\n  valueType: \"date\",\n  hideInSetting: true\n}, {\n  title: \"Địa chỉ\",\n  dataIndex: \"address\",\n  key: \"address\"\n}, {\n  title: \"Hành động\",\n  key: \"option\",\n  width: 120,\n  valueType: \"option\",\n  render: () => [/*#__PURE__*/_jsxDEV(\"a\", {\n    children: \"Edit\"\n  }, \"1\", false, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 24\n  }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n    children: \"Delete\"\n  }, \"2\", false, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 45\n  }, this)]\n}\n\n//   {\n//     title: \"Name\",\n//     dataIndex: \"name\",\n//     key: \"name\"\n//   },\n//   {\n//     title: \"Name\",\n//     dataIndex: \"name\",\n//     initialValue: \"all\",\n//     filters: true,\n//     onFilter: true,\n//     valueType: \"select\",\n//     valueEnum: {\n//       all: { text: \"全部\", status: \"Default\" },\n//       close: { text: \"关闭\", status: \"Default\" },\n//       running: { text: \"运行中\", status: \"Processing\" },\n//       online: { text: \"已上线\", status: \"Success\" },\n//       error: { text: \"异常\", status: \"Error\" }\n//     }\n//   },\n//   {\n//     title: \"更新时间\",\n//     key: \"since2\",\n//     dataIndex: \"createdAt\",\n//     valueType: \"date\",\n//     hideInSetting: true\n//   },\n\n//   {\n//     title: \"操作\",\n//     key: \"option\",\n//     width: 120,\n//     valueType: \"option\",\n//     render: () => [<a key=\"1\">操作</a>, <a key=\"2\">删除</a>]\n//   }\n];\n\nfunction Student() {\n  _s();\n  const [columnsStateMap, setColumnsStateMap] = useState({\n    name: {\n      show: false,\n      order: 2\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(ProTable, {\n      columns: columns,\n      request: params => Promise.resolve({\n        data: tableListDataSource.filter(item => {\n          // if (!params?.keyWord) {\n          //     return true\n          // }\n          // if (\n          //     item.name.includes(params?.keyWord) ||\n          //     item.status.includes(params?.keyWord)\n          // ) {\n          //     return true\n          // }\n          // return false\n          return true;\n        }),\n        success: true\n      }),\n      pagination: {\n        pageSize: 7,\n        onChange: page => console.log(page)\n      },\n      options: {\n        search: true\n      },\n      rowKey: \"key\",\n      columnsState: {\n        value: columnsStateMap,\n        onChange: setColumnsStateMap\n      },\n      search: false,\n      dateFormatter: \"string\",\n      headerTitle: \"Danh s\\xE1ch h\\u1ECDc sinh\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 157,\n    columnNumber: 9\n  }, this);\n}\n_s(Student, \"FcB+H5Gknz2HlJYAsW7cCt2SLX0=\");\n_c = Student;\nexport default Student;\nvar _c;\n$RefreshReg$(_c, \"Student\");","map":{"version":3,"names":["ProTable","useState","jsxDEV","_jsxDEV","valueEnum","tableListDataSource","name","dob","gender","class","phone","hometown","subject","columns","title","key","dataIndex","valueType","hideInSetting","width","render","children","fileName","_jsxFileName","lineNumber","columnNumber","Student","_s","columnsStateMap","setColumnsStateMap","show","order","request","params","Promise","resolve","data","filter","item","success","pagination","pageSize","onChange","page","console","log","options","search","rowKey","columnsState","value","dateFormatter","headerTitle","_c","$RefreshReg$"],"sources":["D:/LearnDeveloper/ReactJS/student-management-infor/src/student.jsx"],"sourcesContent":["import { ProTable } from \"@ant-design/pro-components\"\r\nimport { useState } from \"react\"\r\n\r\nconst valueEnum = {\r\n    0: \"close\",\r\n    1: \"running\",\r\n    2: \"online\",\r\n    3: \"error\"\r\n}\r\n\r\nconst tableListDataSource = [{\r\n    name: \"Lê Bùi Văn\",\r\n    dob: \"22/06/2002\",\r\n    gender: \"Nam\",\r\n    class: \"A\",\r\n    phone: \"0123456789\",\r\n    hometown: \"Hà Nội\",\r\n    subject: [\"Toán\", \"Vật lý\", \"Tiếng Anh\"]\r\n  },\r\n  {\r\n    name: \"Nguyễn Thị Kim Ngân\",\r\n    dob: \"09/03/2003\",\r\n    gender: \"Nữ\",\r\n    class: \"B\",\r\n    phone: \"0112345678\",\r\n    hometown: \"Bắc Ninh\",\r\n    subject: [\"Văn\", \"Hóa học\", \"Lịch sử\"]\r\n  },\r\n  {\r\n    name: \"Trần Văn Minh\",\r\n    dob: \"05/11/2002\",\r\n    gender: \"Nam\",\r\n    class: \"C\",\r\n    phone: \"0109876543\",\r\n    hometown: \"Thái Bình\",\r\n    subject: [\"Toán\", \"Vật lý\", \"Sinh học\"]\r\n  },\r\n  {\r\n    name: \"Phạm Thị Thu\",\r\n    dob: \"17/02/2002\",\r\n    gender: \"Nữ\",\r\n    class: \"A\",\r\n    phone: \"0198765432\",\r\n    hometown: \"Hải Phòng\",\r\n    subject: [\"Văn\", \"Địa lí\", \"Tiếng Anh\"]\r\n  },\r\n  {\r\n    name: \"Nguyễn Văn Hoàn\",\r\n    dob: \"12/09/2003\",\r\n    gender: \"Nam\",\r\n    class: \"B\",\r\n    phone: \"0187654321\",\r\n    hometown: \"Hưng Yên\",\r\n    subject: [\"Toán\", \"Vật lý\", \"Hóa học\"]\r\n  },\r\n  {\r\n    name: \"Bùi Ngọc Ánh\",\r\n    dob: \"08/06/2002\",\r\n    gender: \"Nữ\",\r\n    class: \"C\",\r\n    phone: \"0176543210\",\r\n    hometown: \"Nghệ An\",\r\n    subject: [\"Toán\", \"Hóa học\", \"Sinh học\"]\r\n  }]\r\n\r\n// for (let i = 0; i < 13; i += 1) {\r\n//     tableListDataSource.push({\r\n//         key: i,\r\n//         name: `TradeCode ${i}`,\r\n//         status: valueEnum[Math.floor(Math.random() * 10) % 4],\r\n//         updatedAt: Date.now() - Math.floor(Math.random() * 1000),\r\n//         createdAt: Date.now() - Math.floor(Math.random() * 2000),\r\n//         money: Math.floor(Math.random() * 2000) * i\r\n//     })\r\n// }\r\n\r\nconst columns = [\r\n    // {\r\n    //     title: \"标题\",\r\n    //     dataIndex: \"name\",\r\n    //     key: \"name\"\r\n    //   },\r\n    {\r\n        title: \"Name\",\r\n        key: \"name1\",\r\n        dataIndex: \"name\",\r\n        valueType: \"text\",\r\n       \r\n    },\r\n    {\r\n        title: \"Day of birth\",\r\n        key: \"dob\",\r\n        dataIndex: \"dob\",\r\n        valueType: \"date\",\r\n        hideInSetting: true\r\n    },\r\n    {\r\n        title: \"Địa chỉ\",\r\n        dataIndex: \"address\",\r\n        key: \"address\"\r\n    },\r\n    {\r\n        title: \"Hành động\",\r\n        key: \"option\",\r\n        width: 120,\r\n        valueType: \"option\",\r\n        render: () => [<a key=\"1\">Edit</a>, <a key=\"2\">Delete</a>]\r\n    },\r\n\r\n\r\n\r\n    //   {\r\n    //     title: \"Name\",\r\n    //     dataIndex: \"name\",\r\n    //     key: \"name\"\r\n    //   },\r\n    //   {\r\n    //     title: \"Name\",\r\n    //     dataIndex: \"name\",\r\n    //     initialValue: \"all\",\r\n    //     filters: true,\r\n    //     onFilter: true,\r\n    //     valueType: \"select\",\r\n    //     valueEnum: {\r\n    //       all: { text: \"全部\", status: \"Default\" },\r\n    //       close: { text: \"关闭\", status: \"Default\" },\r\n    //       running: { text: \"运行中\", status: \"Processing\" },\r\n    //       online: { text: \"已上线\", status: \"Success\" },\r\n    //       error: { text: \"异常\", status: \"Error\" }\r\n    //     }\r\n    //   },\r\n    //   {\r\n    //     title: \"更新时间\",\r\n    //     key: \"since2\",\r\n    //     dataIndex: \"createdAt\",\r\n    //     valueType: \"date\",\r\n    //     hideInSetting: true\r\n    //   },\r\n\r\n    //   {\r\n    //     title: \"操作\",\r\n    //     key: \"option\",\r\n    //     width: 120,\r\n    //     valueType: \"option\",\r\n    //     render: () => [<a key=\"1\">操作</a>, <a key=\"2\">删除</a>]\r\n    //   }\r\n]\r\n\r\nfunction Student() {\r\n    const [columnsStateMap, setColumnsStateMap] = useState({\r\n        name: {\r\n            show: false,\r\n            order: 2\r\n        }\r\n    })\r\n    return (\r\n        <div>\r\n            <ProTable\r\n                columns={columns}\r\n                request={params =>\r\n                    Promise.resolve({\r\n                        data: tableListDataSource.filter(item => {\r\n                            // if (!params?.keyWord) {\r\n                            //     return true\r\n                            // }\r\n                            // if (\r\n                            //     item.name.includes(params?.keyWord) ||\r\n                            //     item.status.includes(params?.keyWord)\r\n                            // ) {\r\n                            //     return true\r\n                            // }\r\n                            // return false\r\n                            return true\r\n                        }),\r\n                        success: true\r\n                    })\r\n                }\r\n                pagination={{\r\n                    pageSize: 7,\r\n                    onChange: page => console.log(page)\r\n                }}\r\n                options={{\r\n                    search: true\r\n                }}\r\n                rowKey=\"key\"\r\n                columnsState={{\r\n                    value: columnsStateMap,\r\n                    onChange: setColumnsStateMap\r\n                }}\r\n                search={false}\r\n                dateFormatter=\"string\"\r\n                headerTitle=\"Danh sách học sinh\"\r\n            />\r\n            <button>Add</button>\r\n        </div>\r\n\r\n    )\r\n\r\n}\r\n\r\nexport default Student"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}