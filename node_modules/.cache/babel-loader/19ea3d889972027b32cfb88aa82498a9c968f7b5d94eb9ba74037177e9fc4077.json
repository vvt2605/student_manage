{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getStyle = getStyle;\nexports.registerTheme = registerTheme;\nvar _colors = require(\"@ant-design/colors\");\nvar _tinycolor = require(\"@ctrl/tinycolor\");\nvar _canUseDom = _interopRequireDefault(require(\"rc-util/lib/Dom/canUseDom\"));\nvar _dynamicCSS = require(\"rc-util/lib/Dom/dynamicCSS\");\nvar _warning = _interopRequireDefault(require(\"../_util/warning\"));\n/* eslint-disable import/prefer-default-export, prefer-destructuring */\n\nconst dynamicStyleMark = `-ant-${Date.now()}-${Math.random()}`;\nfunction getStyle(globalPrefixCls, theme) {\n  const variables = {};\n  const formatColor = (color, updater) => {\n    let clone = color.clone();\n    clone = (updater === null || updater === void 0 ? void 0 : updater(clone)) || clone;\n    return clone.toRgbString();\n  };\n  const fillColor = (colorVal, type) => {\n    const baseColor = new _tinycolor.TinyColor(colorVal);\n    const colorPalettes = (0, _colors.generate)(baseColor.toRgbString());\n    variables[`${type}-color`] = formatColor(baseColor);\n    variables[`${type}-color-disabled`] = colorPalettes[1];\n    variables[`${type}-color-hover`] = colorPalettes[4];\n    variables[`${type}-color-active`] = colorPalettes[6];\n    variables[`${type}-color-outline`] = baseColor.clone().setAlpha(0.2).toRgbString();\n    variables[`${type}-color-deprecated-bg`] = colorPalettes[0];\n    variables[`${type}-color-deprecated-border`] = colorPalettes[2];\n  };\n  // ================ Primary Color ================\n  if (theme.primaryColor) {\n    fillColor(theme.primaryColor, 'primary');\n    const primaryColor = new _tinycolor.TinyColor(theme.primaryColor);\n    const primaryColors = (0, _colors.generate)(primaryColor.toRgbString());\n    // Legacy - We should use semantic naming standard\n    primaryColors.forEach((color, index) => {\n      variables[`primary-${index + 1}`] = color;\n    });\n    // Deprecated\n    variables['primary-color-deprecated-l-35'] = formatColor(primaryColor, c => c.lighten(35));\n    variables['primary-color-deprecated-l-20'] = formatColor(primaryColor, c => c.lighten(20));\n    variables['primary-color-deprecated-t-20'] = formatColor(primaryColor, c => c.tint(20));\n    variables['primary-color-deprecated-t-50'] = formatColor(primaryColor, c => c.tint(50));\n    variables['primary-color-deprecated-f-12'] = formatColor(primaryColor, c => c.setAlpha(c.getAlpha() * 0.12));\n    const primaryActiveColor = new _tinycolor.TinyColor(primaryColors[0]);\n    variables['primary-color-active-deprecated-f-30'] = formatColor(primaryActiveColor, c => c.setAlpha(c.getAlpha() * 0.3));\n    variables['primary-color-active-deprecated-d-02'] = formatColor(primaryActiveColor, c => c.darken(2));\n  }\n  // ================ Success Color ================\n  if (theme.successColor) {\n    fillColor(theme.successColor, 'success');\n  }\n  // ================ Warning Color ================\n  if (theme.warningColor) {\n    fillColor(theme.warningColor, 'warning');\n  }\n  // ================= Error Color =================\n  if (theme.errorColor) {\n    fillColor(theme.errorColor, 'error');\n  }\n  // ================= Info Color ==================\n  if (theme.infoColor) {\n    fillColor(theme.infoColor, 'info');\n  }\n  // Convert to css variables\n  const cssList = Object.keys(variables).map(key => `--${globalPrefixCls}-${key}: ${variables[key]};`);\n  return `\n  :root {\n    ${cssList.join('\\n')}\n  }\n  `.trim();\n}\nfunction registerTheme(globalPrefixCls, theme) {\n  const style = getStyle(globalPrefixCls, theme);\n  if ((0, _canUseDom.default)()) {\n    (0, _dynamicCSS.updateCSS)(style, `${dynamicStyleMark}-dynamic-theme`);\n  } else {\n    process.env.NODE_ENV !== \"production\" ? (0, _warning.default)(false, 'ConfigProvider', 'SSR do not support dynamic theme with css variables.') : void 0;\n  }\n}","map":{"version":3,"names":["_interopRequireDefault","require","default","Object","defineProperty","exports","value","getStyle","registerTheme","_colors","_tinycolor","_canUseDom","_dynamicCSS","_warning","dynamicStyleMark","Date","now","Math","random","globalPrefixCls","theme","variables","formatColor","color","updater","clone","toRgbString","fillColor","colorVal","type","baseColor","TinyColor","colorPalettes","generate","setAlpha","primaryColor","primaryColors","forEach","index","c","lighten","tint","getAlpha","primaryActiveColor","darken","successColor","warningColor","errorColor","infoColor","cssList","keys","map","key","join","trim","style","updateCSS","process","env","NODE_ENV"],"sources":["D:/LearnDeveloper/ReactJS/student-management-infor/node_modules/antd/lib/config-provider/cssVariables.js"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getStyle = getStyle;\nexports.registerTheme = registerTheme;\nvar _colors = require(\"@ant-design/colors\");\nvar _tinycolor = require(\"@ctrl/tinycolor\");\nvar _canUseDom = _interopRequireDefault(require(\"rc-util/lib/Dom/canUseDom\"));\nvar _dynamicCSS = require(\"rc-util/lib/Dom/dynamicCSS\");\nvar _warning = _interopRequireDefault(require(\"../_util/warning\"));\n/* eslint-disable import/prefer-default-export, prefer-destructuring */\n\nconst dynamicStyleMark = `-ant-${Date.now()}-${Math.random()}`;\nfunction getStyle(globalPrefixCls, theme) {\n  const variables = {};\n  const formatColor = (color, updater) => {\n    let clone = color.clone();\n    clone = (updater === null || updater === void 0 ? void 0 : updater(clone)) || clone;\n    return clone.toRgbString();\n  };\n  const fillColor = (colorVal, type) => {\n    const baseColor = new _tinycolor.TinyColor(colorVal);\n    const colorPalettes = (0, _colors.generate)(baseColor.toRgbString());\n    variables[`${type}-color`] = formatColor(baseColor);\n    variables[`${type}-color-disabled`] = colorPalettes[1];\n    variables[`${type}-color-hover`] = colorPalettes[4];\n    variables[`${type}-color-active`] = colorPalettes[6];\n    variables[`${type}-color-outline`] = baseColor.clone().setAlpha(0.2).toRgbString();\n    variables[`${type}-color-deprecated-bg`] = colorPalettes[0];\n    variables[`${type}-color-deprecated-border`] = colorPalettes[2];\n  };\n  // ================ Primary Color ================\n  if (theme.primaryColor) {\n    fillColor(theme.primaryColor, 'primary');\n    const primaryColor = new _tinycolor.TinyColor(theme.primaryColor);\n    const primaryColors = (0, _colors.generate)(primaryColor.toRgbString());\n    // Legacy - We should use semantic naming standard\n    primaryColors.forEach((color, index) => {\n      variables[`primary-${index + 1}`] = color;\n    });\n    // Deprecated\n    variables['primary-color-deprecated-l-35'] = formatColor(primaryColor, c => c.lighten(35));\n    variables['primary-color-deprecated-l-20'] = formatColor(primaryColor, c => c.lighten(20));\n    variables['primary-color-deprecated-t-20'] = formatColor(primaryColor, c => c.tint(20));\n    variables['primary-color-deprecated-t-50'] = formatColor(primaryColor, c => c.tint(50));\n    variables['primary-color-deprecated-f-12'] = formatColor(primaryColor, c => c.setAlpha(c.getAlpha() * 0.12));\n    const primaryActiveColor = new _tinycolor.TinyColor(primaryColors[0]);\n    variables['primary-color-active-deprecated-f-30'] = formatColor(primaryActiveColor, c => c.setAlpha(c.getAlpha() * 0.3));\n    variables['primary-color-active-deprecated-d-02'] = formatColor(primaryActiveColor, c => c.darken(2));\n  }\n  // ================ Success Color ================\n  if (theme.successColor) {\n    fillColor(theme.successColor, 'success');\n  }\n  // ================ Warning Color ================\n  if (theme.warningColor) {\n    fillColor(theme.warningColor, 'warning');\n  }\n  // ================= Error Color =================\n  if (theme.errorColor) {\n    fillColor(theme.errorColor, 'error');\n  }\n  // ================= Info Color ==================\n  if (theme.infoColor) {\n    fillColor(theme.infoColor, 'info');\n  }\n  // Convert to css variables\n  const cssList = Object.keys(variables).map(key => `--${globalPrefixCls}-${key}: ${variables[key]};`);\n  return `\n  :root {\n    ${cssList.join('\\n')}\n  }\n  `.trim();\n}\nfunction registerTheme(globalPrefixCls, theme) {\n  const style = getStyle(globalPrefixCls, theme);\n  if ((0, _canUseDom.default)()) {\n    (0, _dynamicCSS.updateCSS)(style, `${dynamicStyleMark}-dynamic-theme`);\n  } else {\n    process.env.NODE_ENV !== \"production\" ? (0, _warning.default)(false, 'ConfigProvider', 'SSR do not support dynamic theme with css variables.') : void 0;\n  }\n}"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}