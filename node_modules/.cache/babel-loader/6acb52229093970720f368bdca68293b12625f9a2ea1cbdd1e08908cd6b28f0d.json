{"ast":null,"code":"import { Typography } from 'antd';\nimport React from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar isNeedTranText = function isNeedTranText(item) {\n  var _item$valueType;\n  if (item !== null && item !== void 0 && (_item$valueType = item.valueType) !== null && _item$valueType !== void 0 && _item$valueType.toString().startsWith('date')) {\n    return true;\n  }\n  if ((item === null || item === void 0 ? void 0 : item.valueType) === 'select' || item !== null && item !== void 0 && item.valueEnum) {\n    return true;\n  }\n  return false;\n};\nvar getEllipsis = function getEllipsis(item) {\n  var _item$ellipsis;\n  if (((_item$ellipsis = item.ellipsis) === null || _item$ellipsis === void 0 ? void 0 : _item$ellipsis.showTitle) === false) {\n    return false;\n  }\n  return item.ellipsis;\n};\n\n/**\n * 生成 Copyable 或 Ellipsis 的 dom\n *\n * @param dom\n * @param item\n * @param text\n */\nexport var genCopyable = function genCopyable(dom, item, text) {\n  if (item.copyable || item.ellipsis) {\n    var copyable = item.copyable && text ? {\n      text: text,\n      tooltips: ['', '']\n    } : undefined;\n\n    /** 有些 valueType 需要设置copy的为string */\n    var needTranText = isNeedTranText(item);\n    var ellipsis = getEllipsis(item) && text ? {\n      tooltip:\n      // 支持一下 tooltip 的关闭\n      (item === null || item === void 0 ? void 0 : item.tooltip) !== false && needTranText ? /*#__PURE__*/_jsx(\"div\", {\n        className: \"pro-table-tooltip-text\",\n        children: dom\n      }) : text\n    } : false;\n    return /*#__PURE__*/_jsx(Typography.Text, {\n      style: {\n        width: '100%',\n        margin: 0,\n        padding: 0\n      },\n      title: \"\",\n      copyable: copyable,\n      ellipsis: ellipsis,\n      children: dom\n    });\n  }\n  return dom;\n};","map":{"version":3,"names":["Typography","React","jsx","_jsx","isNeedTranText","item","_item$valueType","valueType","toString","startsWith","valueEnum","getEllipsis","_item$ellipsis","ellipsis","showTitle","genCopyable","dom","text","copyable","tooltips","undefined","needTranText","tooltip","className","children","Text","style","width","margin","padding","title"],"sources":["D:/LearnDeveloper/ReactJS/student-management-infor/node_modules/@ant-design/pro-utils/es/genCopyable/index.js"],"sourcesContent":["import { Typography } from 'antd';\nimport React from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar isNeedTranText = function isNeedTranText(item) {\n  var _item$valueType;\n  if (item !== null && item !== void 0 && (_item$valueType = item.valueType) !== null && _item$valueType !== void 0 && _item$valueType.toString().startsWith('date')) {\n    return true;\n  }\n  if ((item === null || item === void 0 ? void 0 : item.valueType) === 'select' || item !== null && item !== void 0 && item.valueEnum) {\n    return true;\n  }\n  return false;\n};\nvar getEllipsis = function getEllipsis(item) {\n  var _item$ellipsis;\n  if (((_item$ellipsis = item.ellipsis) === null || _item$ellipsis === void 0 ? void 0 : _item$ellipsis.showTitle) === false) {\n    return false;\n  }\n  return item.ellipsis;\n};\n\n/**\n * 生成 Copyable 或 Ellipsis 的 dom\n *\n * @param dom\n * @param item\n * @param text\n */\nexport var genCopyable = function genCopyable(dom, item, text) {\n  if (item.copyable || item.ellipsis) {\n    var copyable = item.copyable && text ? {\n      text: text,\n      tooltips: ['', '']\n    } : undefined;\n\n    /** 有些 valueType 需要设置copy的为string */\n    var needTranText = isNeedTranText(item);\n    var ellipsis = getEllipsis(item) && text ? {\n      tooltip:\n      // 支持一下 tooltip 的关闭\n      (item === null || item === void 0 ? void 0 : item.tooltip) !== false && needTranText ? /*#__PURE__*/_jsx(\"div\", {\n        className: \"pro-table-tooltip-text\",\n        children: dom\n      }) : text\n    } : false;\n    return /*#__PURE__*/_jsx(Typography.Text, {\n      style: {\n        width: '100%',\n        margin: 0,\n        padding: 0\n      },\n      title: \"\",\n      copyable: copyable,\n      ellipsis: ellipsis,\n      children: dom\n    });\n  }\n  return dom;\n};"],"mappings":"AAAA,SAASA,UAAU,QAAQ,MAAM;AACjC,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,GAAG,IAAIC,IAAI,QAAQ,mBAAmB;AAC/C,IAAIC,cAAc,GAAG,SAASA,cAAcA,CAACC,IAAI,EAAE;EACjD,IAAIC,eAAe;EACnB,IAAID,IAAI,KAAK,IAAI,IAAIA,IAAI,KAAK,KAAK,CAAC,IAAI,CAACC,eAAe,GAAGD,IAAI,CAACE,SAAS,MAAM,IAAI,IAAID,eAAe,KAAK,KAAK,CAAC,IAAIA,eAAe,CAACE,QAAQ,EAAE,CAACC,UAAU,CAAC,MAAM,CAAC,EAAE;IAClK,OAAO,IAAI;EACb;EACA,IAAI,CAACJ,IAAI,KAAK,IAAI,IAAIA,IAAI,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,IAAI,CAACE,SAAS,MAAM,QAAQ,IAAIF,IAAI,KAAK,IAAI,IAAIA,IAAI,KAAK,KAAK,CAAC,IAAIA,IAAI,CAACK,SAAS,EAAE;IACnI,OAAO,IAAI;EACb;EACA,OAAO,KAAK;AACd,CAAC;AACD,IAAIC,WAAW,GAAG,SAASA,WAAWA,CAACN,IAAI,EAAE;EAC3C,IAAIO,cAAc;EAClB,IAAI,CAAC,CAACA,cAAc,GAAGP,IAAI,CAACQ,QAAQ,MAAM,IAAI,IAAID,cAAc,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,cAAc,CAACE,SAAS,MAAM,KAAK,EAAE;IAC1H,OAAO,KAAK;EACd;EACA,OAAOT,IAAI,CAACQ,QAAQ;AACtB,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,IAAIE,WAAW,GAAG,SAASA,WAAWA,CAACC,GAAG,EAAEX,IAAI,EAAEY,IAAI,EAAE;EAC7D,IAAIZ,IAAI,CAACa,QAAQ,IAAIb,IAAI,CAACQ,QAAQ,EAAE;IAClC,IAAIK,QAAQ,GAAGb,IAAI,CAACa,QAAQ,IAAID,IAAI,GAAG;MACrCA,IAAI,EAAEA,IAAI;MACVE,QAAQ,EAAE,CAAC,EAAE,EAAE,EAAE;IACnB,CAAC,GAAGC,SAAS;;IAEb;IACA,IAAIC,YAAY,GAAGjB,cAAc,CAACC,IAAI,CAAC;IACvC,IAAIQ,QAAQ,GAAGF,WAAW,CAACN,IAAI,CAAC,IAAIY,IAAI,GAAG;MACzCK,OAAO;MACP;MACA,CAACjB,IAAI,KAAK,IAAI,IAAIA,IAAI,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,IAAI,CAACiB,OAAO,MAAM,KAAK,IAAID,YAAY,GAAG,aAAalB,IAAI,CAAC,KAAK,EAAE;QAC9GoB,SAAS,EAAE,wBAAwB;QACnCC,QAAQ,EAAER;MACZ,CAAC,CAAC,GAAGC;IACP,CAAC,GAAG,KAAK;IACT,OAAO,aAAad,IAAI,CAACH,UAAU,CAACyB,IAAI,EAAE;MACxCC,KAAK,EAAE;QACLC,KAAK,EAAE,MAAM;QACbC,MAAM,EAAE,CAAC;QACTC,OAAO,EAAE;MACX,CAAC;MACDC,KAAK,EAAE,EAAE;MACTZ,QAAQ,EAAEA,QAAQ;MAClBL,QAAQ,EAAEA,QAAQ;MAClBW,QAAQ,EAAER;IACZ,CAAC,CAAC;EACJ;EACA,OAAOA,GAAG;AACZ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}