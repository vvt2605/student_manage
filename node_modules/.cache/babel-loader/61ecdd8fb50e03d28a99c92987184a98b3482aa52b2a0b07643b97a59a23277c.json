{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = genColorMapToken;\nvar _tinycolor = require(\"@ctrl/tinycolor\");\nfunction genColorMapToken(seed, _ref) {\n  let {\n    generateColorPalettes,\n    generateNeutralColorPalettes\n  } = _ref;\n  const {\n    colorSuccess: colorSuccessBase,\n    colorWarning: colorWarningBase,\n    colorError: colorErrorBase,\n    colorInfo: colorInfoBase,\n    colorPrimary: colorPrimaryBase,\n    colorBgBase,\n    colorTextBase\n  } = seed;\n  const primaryColors = generateColorPalettes(colorPrimaryBase);\n  const successColors = generateColorPalettes(colorSuccessBase);\n  const warningColors = generateColorPalettes(colorWarningBase);\n  const errorColors = generateColorPalettes(colorErrorBase);\n  const infoColors = generateColorPalettes(colorInfoBase);\n  const neutralColors = generateNeutralColorPalettes(colorBgBase, colorTextBase);\n  return Object.assign(Object.assign({}, neutralColors), {\n    colorPrimaryBg: primaryColors[1],\n    colorPrimaryBgHover: primaryColors[2],\n    colorPrimaryBorder: primaryColors[3],\n    colorPrimaryBorderHover: primaryColors[4],\n    colorPrimaryHover: primaryColors[5],\n    colorPrimary: primaryColors[6],\n    colorPrimaryActive: primaryColors[7],\n    colorPrimaryTextHover: primaryColors[8],\n    colorPrimaryText: primaryColors[9],\n    colorPrimaryTextActive: primaryColors[10],\n    colorSuccessBg: successColors[1],\n    colorSuccessBgHover: successColors[2],\n    colorSuccessBorder: successColors[3],\n    colorSuccessBorderHover: successColors[4],\n    colorSuccessHover: successColors[4],\n    colorSuccess: successColors[6],\n    colorSuccessActive: successColors[7],\n    colorSuccessTextHover: successColors[8],\n    colorSuccessText: successColors[9],\n    colorSuccessTextActive: successColors[10],\n    colorErrorBg: errorColors[1],\n    colorErrorBgHover: errorColors[2],\n    colorErrorBorder: errorColors[3],\n    colorErrorBorderHover: errorColors[4],\n    colorErrorHover: errorColors[5],\n    colorError: errorColors[6],\n    colorErrorActive: errorColors[7],\n    colorErrorTextHover: errorColors[8],\n    colorErrorText: errorColors[9],\n    colorErrorTextActive: errorColors[10],\n    colorWarningBg: warningColors[1],\n    colorWarningBgHover: warningColors[2],\n    colorWarningBorder: warningColors[3],\n    colorWarningBorderHover: warningColors[4],\n    colorWarningHover: warningColors[4],\n    colorWarning: warningColors[6],\n    colorWarningActive: warningColors[7],\n    colorWarningTextHover: warningColors[8],\n    colorWarningText: warningColors[9],\n    colorWarningTextActive: warningColors[10],\n    colorInfoBg: infoColors[1],\n    colorInfoBgHover: infoColors[2],\n    colorInfoBorder: infoColors[3],\n    colorInfoBorderHover: infoColors[4],\n    colorInfoHover: infoColors[4],\n    colorInfo: infoColors[6],\n    colorInfoActive: infoColors[7],\n    colorInfoTextHover: infoColors[8],\n    colorInfoText: infoColors[9],\n    colorInfoTextActive: infoColors[10],\n    colorBgMask: new _tinycolor.TinyColor('#000').setAlpha(0.45).toRgbString(),\n    colorWhite: '#fff'\n  });\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","default","genColorMapToken","_tinycolor","require","seed","_ref","generateColorPalettes","generateNeutralColorPalettes","colorSuccess","colorSuccessBase","colorWarning","colorWarningBase","colorError","colorErrorBase","colorInfo","colorInfoBase","colorPrimary","colorPrimaryBase","colorBgBase","colorTextBase","primaryColors","successColors","warningColors","errorColors","infoColors","neutralColors","assign","colorPrimaryBg","colorPrimaryBgHover","colorPrimaryBorder","colorPrimaryBorderHover","colorPrimaryHover","colorPrimaryActive","colorPrimaryTextHover","colorPrimaryText","colorPrimaryTextActive","colorSuccessBg","colorSuccessBgHover","colorSuccessBorder","colorSuccessBorderHover","colorSuccessHover","colorSuccessActive","colorSuccessTextHover","colorSuccessText","colorSuccessTextActive","colorErrorBg","colorErrorBgHover","colorErrorBorder","colorErrorBorderHover","colorErrorHover","colorErrorActive","colorErrorTextHover","colorErrorText","colorErrorTextActive","colorWarningBg","colorWarningBgHover","colorWarningBorder","colorWarningBorderHover","colorWarningHover","colorWarningActive","colorWarningTextHover","colorWarningText","colorWarningTextActive","colorInfoBg","colorInfoBgHover","colorInfoBorder","colorInfoBorderHover","colorInfoHover","colorInfoActive","colorInfoTextHover","colorInfoText","colorInfoTextActive","colorBgMask","TinyColor","setAlpha","toRgbString","colorWhite"],"sources":["D:/LearnDeveloper/ReactJS/student-management-infor/node_modules/antd/lib/theme/themes/shared/genColorMapToken.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = genColorMapToken;\nvar _tinycolor = require(\"@ctrl/tinycolor\");\nfunction genColorMapToken(seed, _ref) {\n  let {\n    generateColorPalettes,\n    generateNeutralColorPalettes\n  } = _ref;\n  const {\n    colorSuccess: colorSuccessBase,\n    colorWarning: colorWarningBase,\n    colorError: colorErrorBase,\n    colorInfo: colorInfoBase,\n    colorPrimary: colorPrimaryBase,\n    colorBgBase,\n    colorTextBase\n  } = seed;\n  const primaryColors = generateColorPalettes(colorPrimaryBase);\n  const successColors = generateColorPalettes(colorSuccessBase);\n  const warningColors = generateColorPalettes(colorWarningBase);\n  const errorColors = generateColorPalettes(colorErrorBase);\n  const infoColors = generateColorPalettes(colorInfoBase);\n  const neutralColors = generateNeutralColorPalettes(colorBgBase, colorTextBase);\n  return Object.assign(Object.assign({}, neutralColors), {\n    colorPrimaryBg: primaryColors[1],\n    colorPrimaryBgHover: primaryColors[2],\n    colorPrimaryBorder: primaryColors[3],\n    colorPrimaryBorderHover: primaryColors[4],\n    colorPrimaryHover: primaryColors[5],\n    colorPrimary: primaryColors[6],\n    colorPrimaryActive: primaryColors[7],\n    colorPrimaryTextHover: primaryColors[8],\n    colorPrimaryText: primaryColors[9],\n    colorPrimaryTextActive: primaryColors[10],\n    colorSuccessBg: successColors[1],\n    colorSuccessBgHover: successColors[2],\n    colorSuccessBorder: successColors[3],\n    colorSuccessBorderHover: successColors[4],\n    colorSuccessHover: successColors[4],\n    colorSuccess: successColors[6],\n    colorSuccessActive: successColors[7],\n    colorSuccessTextHover: successColors[8],\n    colorSuccessText: successColors[9],\n    colorSuccessTextActive: successColors[10],\n    colorErrorBg: errorColors[1],\n    colorErrorBgHover: errorColors[2],\n    colorErrorBorder: errorColors[3],\n    colorErrorBorderHover: errorColors[4],\n    colorErrorHover: errorColors[5],\n    colorError: errorColors[6],\n    colorErrorActive: errorColors[7],\n    colorErrorTextHover: errorColors[8],\n    colorErrorText: errorColors[9],\n    colorErrorTextActive: errorColors[10],\n    colorWarningBg: warningColors[1],\n    colorWarningBgHover: warningColors[2],\n    colorWarningBorder: warningColors[3],\n    colorWarningBorderHover: warningColors[4],\n    colorWarningHover: warningColors[4],\n    colorWarning: warningColors[6],\n    colorWarningActive: warningColors[7],\n    colorWarningTextHover: warningColors[8],\n    colorWarningText: warningColors[9],\n    colorWarningTextActive: warningColors[10],\n    colorInfoBg: infoColors[1],\n    colorInfoBgHover: infoColors[2],\n    colorInfoBorder: infoColors[3],\n    colorInfoBorderHover: infoColors[4],\n    colorInfoHover: infoColors[4],\n    colorInfo: infoColors[6],\n    colorInfoActive: infoColors[7],\n    colorInfoTextHover: infoColors[8],\n    colorInfoText: infoColors[9],\n    colorInfoTextActive: infoColors[10],\n    colorBgMask: new _tinycolor.TinyColor('#000').setAlpha(0.45).toRgbString(),\n    colorWhite: '#fff'\n  });\n}"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}