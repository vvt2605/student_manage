{"ast":null,"code":"import _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport { genCopyable, isNil, LabelIconTip } from '@ant-design/pro-utils';\nimport get from \"rc-util/es/utils/get\";\nimport React from 'react';\nimport { isMergeCell } from '.';\nimport cellRenderToFromItem from \"./cellRenderToFromItem\";\n\n/** 转化列的定义 */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n/**\n * 增加了 icon 的功能 render title\n *\n * @param item\n */\nexport var renderColumnsTitle = function renderColumnsTitle(item) {\n  var _item$ellipsis;\n  var title = item.title;\n  var ellipsis = typeof (item === null || item === void 0 ? void 0 : item.ellipsis) === 'boolean' ? item === null || item === void 0 ? void 0 : item.ellipsis : item === null || item === void 0 ? void 0 : (_item$ellipsis = item.ellipsis) === null || _item$ellipsis === void 0 ? void 0 : _item$ellipsis.showTitle;\n  if (title && typeof title === 'function') {\n    return title(item, 'table', /*#__PURE__*/_jsx(LabelIconTip, {\n      label: null,\n      tooltip: item.tooltip || item.tip\n    }));\n  }\n  return /*#__PURE__*/_jsx(LabelIconTip, {\n    label: title,\n    tooltip: item.tooltip || item.tip,\n    ellipsis: ellipsis\n  });\n};\n\n/** 判断可不可编辑 */\nfunction isEditableCell(text, rowData, index, editable) {\n  if (typeof editable === 'boolean') {\n    return editable === false;\n  }\n  return (editable === null || editable === void 0 ? void 0 : editable(text, rowData, index)) === false;\n}\n\n/**\n * 默认的 filter 方法\n *\n * @param value\n * @param record\n * @param dataIndex\n * @returns\n */\nexport var defaultOnFilter = function defaultOnFilter(value, record, dataIndex) {\n  var recordElement = Array.isArray(dataIndex) ? get(record, dataIndex) : record[dataIndex];\n  var itemValue = String(recordElement);\n  return String(itemValue) === String(value);\n};\n\n/**\n * 这个组件负责单元格的具体渲染\n *\n * @param param0\n */\nexport function columnRender(_ref) {\n  var columnProps = _ref.columnProps,\n    text = _ref.text,\n    rowData = _ref.rowData,\n    index = _ref.index,\n    columnEmptyText = _ref.columnEmptyText,\n    counter = _ref.counter,\n    type = _ref.type,\n    subName = _ref.subName,\n    editableUtils = _ref.editableUtils;\n  var action = counter.action,\n    prefixName = counter.prefixName;\n  var _editableUtils$isEdit = editableUtils.isEditable(_objectSpread(_objectSpread({}, rowData), {}, {\n      index: index\n    })),\n    isEditable = _editableUtils$isEdit.isEditable,\n    recordKey = _editableUtils$isEdit.recordKey;\n  var _columnProps$renderTe = columnProps.renderText,\n    renderText = _columnProps$renderTe === void 0 ? function (val) {\n      return val;\n    } : _columnProps$renderTe;\n  var renderTextStr = renderText(text, rowData, index, action);\n  var mode = isEditable && !isEditableCell(text, rowData, index, columnProps === null || columnProps === void 0 ? void 0 : columnProps.editable) ? 'edit' : 'read';\n  var textDom = cellRenderToFromItem({\n    text: renderTextStr,\n    valueType: columnProps.valueType || 'text',\n    index: index,\n    rowData: rowData,\n    subName: subName,\n    columnProps: _objectSpread(_objectSpread({}, columnProps), {}, {\n      // 为了兼容性，原来写了个错别字\n      // @ts-ignore\n      entry: rowData,\n      entity: rowData\n    }),\n    counter: counter,\n    columnEmptyText: columnEmptyText,\n    type: type,\n    recordKey: recordKey,\n    mode: mode,\n    prefixName: prefixName,\n    editableUtils: editableUtils\n  });\n  var dom = mode === 'edit' ? textDom : genCopyable(textDom, columnProps, renderTextStr);\n\n  /** 如果是编辑模式，并且 renderFormItem 存在直接走 renderFormItem */\n  if (mode === 'edit') {\n    if (columnProps.valueType === 'option') {\n      return /*#__PURE__*/_jsx(\"div\", {\n        style: {\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center',\n          gap: 12\n        },\n        children: editableUtils.actionRender(_objectSpread(_objectSpread({}, rowData), {}, {\n          index: columnProps.index || index\n        }))\n      });\n    }\n    return dom;\n  }\n  if (!columnProps.render) {\n    var isReactRenderNode = /*#__PURE__*/React.isValidElement(dom) || ['string', 'number'].includes(_typeof(dom));\n    return !isNil(dom) && isReactRenderNode ? dom : null;\n  }\n  var renderDom = columnProps.render(dom, rowData, index, _objectSpread(_objectSpread({}, action), editableUtils), _objectSpread(_objectSpread({}, columnProps), {}, {\n    isEditable: isEditable,\n    type: 'table'\n  }));\n\n  // 如果是合并单元格的，直接返回对象\n  if (isMergeCell(renderDom)) {\n    return renderDom;\n  }\n  if (renderDom && columnProps.valueType === 'option' && Array.isArray(renderDom)) {\n    return /*#__PURE__*/_jsx(\"div\", {\n      style: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'flex-start',\n        gap: 8\n      },\n      children: renderDom\n    });\n  }\n  return renderDom;\n}","map":{"version":3,"names":["_typeof","_objectSpread","genCopyable","isNil","LabelIconTip","get","React","isMergeCell","cellRenderToFromItem","jsx","_jsx","renderColumnsTitle","item","_item$ellipsis","title","ellipsis","showTitle","label","tooltip","tip","isEditableCell","text","rowData","index","editable","defaultOnFilter","value","record","dataIndex","recordElement","Array","isArray","itemValue","String","columnRender","_ref","columnProps","columnEmptyText","counter","type","subName","editableUtils","action","prefixName","_editableUtils$isEdit","isEditable","recordKey","_columnProps$renderTe","renderText","val","renderTextStr","mode","textDom","valueType","entry","entity","dom","style","display","alignItems","justifyContent","gap","children","actionRender","render","isReactRenderNode","isValidElement","includes","renderDom"],"sources":["D:/LearnDeveloper/ReactJS/student-management-infor/node_modules/@ant-design/pro-table/es/utils/columnRender.js"],"sourcesContent":["import _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport { genCopyable, isNil, LabelIconTip } from '@ant-design/pro-utils';\nimport get from \"rc-util/es/utils/get\";\nimport React from 'react';\nimport { isMergeCell } from '.';\nimport cellRenderToFromItem from \"./cellRenderToFromItem\";\n\n/** 转化列的定义 */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n/**\n * 增加了 icon 的功能 render title\n *\n * @param item\n */\nexport var renderColumnsTitle = function renderColumnsTitle(item) {\n  var _item$ellipsis;\n  var title = item.title;\n  var ellipsis = typeof (item === null || item === void 0 ? void 0 : item.ellipsis) === 'boolean' ? item === null || item === void 0 ? void 0 : item.ellipsis : item === null || item === void 0 ? void 0 : (_item$ellipsis = item.ellipsis) === null || _item$ellipsis === void 0 ? void 0 : _item$ellipsis.showTitle;\n  if (title && typeof title === 'function') {\n    return title(item, 'table', /*#__PURE__*/_jsx(LabelIconTip, {\n      label: null,\n      tooltip: item.tooltip || item.tip\n    }));\n  }\n  return /*#__PURE__*/_jsx(LabelIconTip, {\n    label: title,\n    tooltip: item.tooltip || item.tip,\n    ellipsis: ellipsis\n  });\n};\n\n/** 判断可不可编辑 */\nfunction isEditableCell(text, rowData, index, editable) {\n  if (typeof editable === 'boolean') {\n    return editable === false;\n  }\n  return (editable === null || editable === void 0 ? void 0 : editable(text, rowData, index)) === false;\n}\n\n/**\n * 默认的 filter 方法\n *\n * @param value\n * @param record\n * @param dataIndex\n * @returns\n */\nexport var defaultOnFilter = function defaultOnFilter(value, record, dataIndex) {\n  var recordElement = Array.isArray(dataIndex) ? get(record, dataIndex) : record[dataIndex];\n  var itemValue = String(recordElement);\n  return String(itemValue) === String(value);\n};\n\n/**\n * 这个组件负责单元格的具体渲染\n *\n * @param param0\n */\nexport function columnRender(_ref) {\n  var columnProps = _ref.columnProps,\n    text = _ref.text,\n    rowData = _ref.rowData,\n    index = _ref.index,\n    columnEmptyText = _ref.columnEmptyText,\n    counter = _ref.counter,\n    type = _ref.type,\n    subName = _ref.subName,\n    editableUtils = _ref.editableUtils;\n  var action = counter.action,\n    prefixName = counter.prefixName;\n  var _editableUtils$isEdit = editableUtils.isEditable(_objectSpread(_objectSpread({}, rowData), {}, {\n      index: index\n    })),\n    isEditable = _editableUtils$isEdit.isEditable,\n    recordKey = _editableUtils$isEdit.recordKey;\n  var _columnProps$renderTe = columnProps.renderText,\n    renderText = _columnProps$renderTe === void 0 ? function (val) {\n      return val;\n    } : _columnProps$renderTe;\n  var renderTextStr = renderText(text, rowData, index, action);\n  var mode = isEditable && !isEditableCell(text, rowData, index, columnProps === null || columnProps === void 0 ? void 0 : columnProps.editable) ? 'edit' : 'read';\n  var textDom = cellRenderToFromItem({\n    text: renderTextStr,\n    valueType: columnProps.valueType || 'text',\n    index: index,\n    rowData: rowData,\n    subName: subName,\n    columnProps: _objectSpread(_objectSpread({}, columnProps), {}, {\n      // 为了兼容性，原来写了个错别字\n      // @ts-ignore\n      entry: rowData,\n      entity: rowData\n    }),\n    counter: counter,\n    columnEmptyText: columnEmptyText,\n    type: type,\n    recordKey: recordKey,\n    mode: mode,\n    prefixName: prefixName,\n    editableUtils: editableUtils\n  });\n  var dom = mode === 'edit' ? textDom : genCopyable(textDom, columnProps, renderTextStr);\n\n  /** 如果是编辑模式，并且 renderFormItem 存在直接走 renderFormItem */\n  if (mode === 'edit') {\n    if (columnProps.valueType === 'option') {\n      return /*#__PURE__*/_jsx(\"div\", {\n        style: {\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center',\n          gap: 12\n        },\n        children: editableUtils.actionRender(_objectSpread(_objectSpread({}, rowData), {}, {\n          index: columnProps.index || index\n        }))\n      });\n    }\n    return dom;\n  }\n  if (!columnProps.render) {\n    var isReactRenderNode = /*#__PURE__*/React.isValidElement(dom) || ['string', 'number'].includes(_typeof(dom));\n    return !isNil(dom) && isReactRenderNode ? dom : null;\n  }\n  var renderDom = columnProps.render(dom, rowData, index, _objectSpread(_objectSpread({}, action), editableUtils), _objectSpread(_objectSpread({}, columnProps), {}, {\n    isEditable: isEditable,\n    type: 'table'\n  }));\n\n  // 如果是合并单元格的，直接返回对象\n  if (isMergeCell(renderDom)) {\n    return renderDom;\n  }\n  if (renderDom && columnProps.valueType === 'option' && Array.isArray(renderDom)) {\n    return /*#__PURE__*/_jsx(\"div\", {\n      style: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'flex-start',\n        gap: 8\n      },\n      children: renderDom\n    });\n  }\n  return renderDom;\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}